OAuth 
=====
 
[OAuth][oauth] is the protocol used by the Videojuicer Core API for allowing various software agents ("Consumers") to interact with the Core API on behalf of an authorising user.

Where some APIs require that you [hand over your username and password][antipattern] when using third-party services, OAuth allows you to issue software consumers with a _token_ that allows the consumer to authenticate on your behalf, with a subset of your privileges. You're free to change your password without breaking any of your authorized consumers, and should you decide that you no longer trust an application you're free to revoke its access or even downgrade its permissions without affecting any other applications.

[antipattern]: http://adactio.com/journal/1357
[oauth]: http://oauth.net

Signing requests
----------------
All authenticated requests to the Core API must be signed [according to the OAuth specification][oauth_spec] 1.0 or 1.0a, 1.0a being the latest and recommended specification to follow.

In addition to the OAuth parameters required to produce a valid signed request, consumers *must* provide the following parameters in either the query string or the request body when signing requests:

**seed_name**: The name of the Seed against which you are trying to authenticate.
**api_version**: The version of the Videojuicer API that you wish to use. The current version number is 1.

[oauth_spec]: http://oauth.net/core/1.0a

Requesting Authorisation
------------------------
The OAuth authorisation process has three major steps:

**1. [Request an unauthorized request token][request_token_spec]**
The consumer sends a request signed with no token or token secret and to the _token endpoint_ in order to receive an unauthorized request token. 

	Request token endpoint: http://api.videojuicer.com/oauth/tokens

**2. [Obtain user authorization][user_authorisation_spec]**
The consumer uses the unauthorised request token to sign the authorisation endpoint. The consumer must then direct the user to the signed authorisation endpoint URL.

	Authorisation endpoint: http://api.videojuicer.com/oauth/tokens/new

**3. [Request the authorized access token][access_token_spec]**
Once the user has completed the authorisation process, the consumer sends a request signed with the unauthorised request token to the access token endpoint. An authorised access token is returned. This access token may be used to sign later requests and authenticate with the Videojuicer Core API.

	Access token endpoint: http://api.videojuicer.com/oauth/tokens

[request_token_spec]: http://oauth.net/core/1.0a#auth_step1
[user_authorisation_spec]: http://oauth.net/core/1.0a#auth_step2
[access_token_spec]: http://oauth.net/core/1.0a#auth_step3

Permissions
-----------
When [registering your application][consumer_registration] with the Videojuicer Core API, you will be prompted to select the level of privilege that your consumer requires in order to function properly. There are four permission levels to choose from:

**read-user** applications will be able to read data that the authorizing user is permitted to access.
**write-user** applications can read and write content with the same permissions as the authorizing user.
**read-master** applications can read data on behalf of any user within the authorizing user's seed. 
**write-master**: applications can read or write data on behalf of any user within the authorizing user's seed. 

It should be noted that only users with the _administrator_ role can authorize consumers which require read-master or write-master permissions.

Read-master and write-master permissions are an advantageous option for applications that should be authorised once for an entire seed by a single administrator, such as Videojuicer's own Management Panel application. Most applications such as upload, export or production workflow tools should only require read-user or write-user permissions.

[consumer_registration]: http://api.videojuicer.com/oauth/consumers


Proxy Authentication
--------------------

Under the traditional OAuth authentication model, signing a request with an authorized access token authenticates the consumer as the token's issuing user for the duration of the request. This allows the consumer to access the API with all the permissions and privileges of the token's issuing user.

If you wish to create a multi-user consumer that can be authorized *once* against a seed and used thereafter by all the users within that seed, then you need to [registering an application][consumer_registration] that requires write-master or read-master permissions.

Consumers that are authorized with read-master or write-master permissions have the ability to authenticate as _any_ user from the authorising user's seed. This is achieved by including an optional parameter in the request's query string or body:

	user_id: The ID of the user you wish to authenticate as for the duration of this request.
	
When making requests using proxy authentication, the Core API will respond as if you were authenticated directly as the specified user. Attempting to perform actions or access content that the user does not have permission to access will result in an 401 Unauthenticated response from the Core API.

Attribution
-----------

Objects created via the Videojuicer Core API are attributed by having their user_id attribute automatically set to that of the authenticated user. In the event that your consumer is using Proxy Authentication (see above), the specified user_id will be respected when this takes place.

Consumers authorised with write-master access are also able to manually set the user_id of any attributable object when creating or updating the object. This attribute is not writable by consumers permissions other than write-master.